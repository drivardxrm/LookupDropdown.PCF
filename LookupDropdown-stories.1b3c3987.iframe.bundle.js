(self.webpackChunkpcf_project=self.webpackChunkpcf_project||[]).push([[662],{"./stories/LookupDropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomText:()=>CustomText,LongText:()=>LongText,Primary:()=>Primary,Selected:()=>Selected,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LookupDropdown_stories});var esm=__webpack_require__("./node_modules/@shko.online/componentframework-mock/lib/esm/index.js"),client=__webpack_require__("./node_modules/react-dom/client.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),queryClient=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/queryClient.js"),queryCache=__webpack_require__("./node_modules/@tanstack/query-core/build/modern/queryCache.js"),QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js"),react=__webpack_require__("./node_modules/react/index.js");const PcfContextProvider=({pcfcontext,children})=>(0,jsx_runtime.jsx)(PcfContext.Provider,{value:pcfcontext,children}),PcfContext=(0,react.createContext)(void 0),usePcfContext=()=>(0,react.useContext)(PcfContext);var __async=(__this,__arguments,generator)=>new Promise(((resolve,reject)=>{var fulfilled=value=>{try{step(generator.next(value))}catch(e){reject(e)}},rejected=value=>{try{step(generator.throw(value))}catch(e){reject(e)}},step=x=>x.done?resolve(x.value):Promise.resolve(x.value).then(fulfilled,rejected);step((generator=generator.apply(__this,__arguments)).next())}));class PcfContextService{constructor(props){var _a,_b,_c,_d,_e,_f,_g,_h;props&&(this.instanceid=props.instanceid,this.isDarkMode=props.isDarkMode,this.context=props.context,this.viewid=props.context.parameters.lookupfield.getViewId(),this.isReadOnly=props.context.mode.isControlDisabled||!(null==(_a=props.context.parameters.lookupfield.security)?void 0:_a.editable),this.isMasked=!(null==(_b=props.context.parameters.lookupfield.security)?void 0:_b.readable),this.showRecordImage="true"===props.context.parameters.showRecordImage.raw,this.openRecordEnabled="true"===props.context.parameters.showOpenRecordButton.raw,this.selectedValue=null!=(_c=props.context.parameters.lookupfield.raw[0])?_c:void 0,this.dependentValue=null!==(null==(_d=props.context.parameters.dependentlookupfield)?void 0:_d.raw)?null==(_e=props.context.parameters.dependentlookupfield)?void 0:_e.raw[0]:void 0,this.dependentEntityName=null!=(_f=props.context.parameters.lookupfield.dependentAttributeType)?_f:"",this.filterRelationshipName=null!=(_g=props.context.parameters.lookupfield.filterRelationshipName)?_g:"",this.context.parameters.customtext.raw&&(this.customText=this.context.parameters.customtext.raw.indexOf("##")>-1?null==(_h=this.context.parameters.customtext.raw.split("__").find((langcustomtext=>langcustomtext.split("##")[0]===this.context.userSettings.languageId.toString())))?void 0:_h.split("##")[1]:this.context.parameters.customtext.raw),this.onChange=props.onChange)}CustomTextAttributes(){var _a,_b;return null!=(_b=null==(_a=this.context.parameters.customtext.raw)?void 0:_a.match(/[^{\}]+(?=})/g))?_b:[]}SelectText(){var _a;return`--${null!=(_a=this.context.parameters.customselecttext.raw)?_a:this.context.resources.getString("Select")}--`}replaceAll(string,search,replace){return string.split(search).join(replace)}getRecordText(record,primaryname){if(this.customText){let customtext=this.customText;return this.CustomTextAttributes().forEach((attribute=>{var _a,_b;const formatedValue=null!=(_b=null!=(_a=record[`${attribute}@OData.Community.Display.V1.FormattedValue`])?_a:record[`_${attribute}_value@OData.Community.Display.V1.FormattedValue`])?_b:record[`${attribute}`];customtext=this.replaceAll(customtext,`{${attribute}}`,null!=formatedValue?formatedValue:"")})),customtext}return record[`${primaryname}`]}getAttributes(primaryid,primaryname,primaryimage){const attributes=[primaryid,primaryname];return this.CustomTextAttributes().forEach((attribute=>{attributes.includes(attribute)||attributes.push(attribute)})),this.showRecordImage&&attributes.push(primaryimage),attributes}getLookupRecords(entityname,primaryid,primaryname,primaryimage,fetchxml,metadata){return __async(this,null,(function*(){var _a,_b,_c,_d,_e,_f;const fetchxmldoc=(new DOMParser).parseFromString(fetchxml,"text/xml"),entityelement=fetchxmldoc.getElementsByTagName("entity")[0];if(fetchxmldoc.querySelectorAll("attribute").forEach((el=>el.remove())),fetchxmldoc.querySelectorAll('link-entity[alias="dependent"]').forEach((el=>el.remove())),this.getAttributes(primaryid,primaryname,primaryimage).forEach((attribute=>{const customattribute=fetchxmldoc.createElement("attribute");customattribute.setAttribute("name",attribute),entityelement.appendChild(customattribute)})),""!==this.filterRelationshipName&&""!==this.dependentEntityName&&void 0!==this.dependentValue&&""!==(null==(_a=this.dependentValue)?void 0:_a.id)){const manytoonerelationship=null==(_b=metadata.ManyToOneRelationships)?void 0:_b.getByName(this.filterRelationshipName),onetomanyrelationship=null==(_c=metadata.OneToManyRelationships)?void 0:_c.getByName(this.filterRelationshipName),manytomanyrelationship=null==(_d=metadata.ManyToManyRelationships)?void 0:_d.getByName(this.filterRelationshipName),linkentity=manytoonerelationship?this.getManyToOneLinkEntity(manytoonerelationship):onetomanyrelationship?this.getOneToManyLinkEntity(onetomanyrelationship,entityname):this.getManyToManyLinkEntity(manytomanyrelationship,entityname);entityelement.appendChild(linkentity)}const fetchxmlstring=(new XMLSerializer).serializeToString(fetchxmldoc),result=yield this.context.webAPI.retrieveMultipleRecords(entityname,`?fetchXml=${fetchxmlstring}`);return result.entities?"true"===(null==(_e=this.context.parameters.sortByTextValue)?void 0:_e.raw)?null==(_f=result.entities)?void 0:_f.sort(((a,b)=>{const aText=this.getRecordText(a,primaryname),bText=this.getRecordText(b,primaryname);return aText.localeCompare(bText)})):result.entities:[]}))}getManyToOneLinkEntity(manytoonerelationship){var _a,_b;const from=`${this.dependentEntityName}id`,to=manytoonerelationship.ReferencingAttribute,linkentity=document.createElement("link-entity");linkentity.setAttribute("name",this.dependentEntityName),linkentity.setAttribute("from",from),linkentity.setAttribute("to",to),linkentity.setAttribute("alias","dependent");const filter=document.createElement("filter");filter.setAttribute("type","and");const condition=document.createElement("condition");return condition.setAttribute("attribute",`${this.dependentEntityName}id`),condition.setAttribute("operator","eq"),condition.setAttribute("uitype",this.dependentEntityName),condition.setAttribute("value",null!=(_b=null==(_a=this.dependentValue)?void 0:_a.id)?_b:""),filter.appendChild(condition),linkentity.appendChild(filter),linkentity}getOneToManyLinkEntity(onetomanyrelationship,baseentityname){var _a,_b;const from=onetomanyrelationship.ReferencingAttribute,to=`${baseentityname}id`,linkentity=document.createElement("link-entity");linkentity.setAttribute("name",this.dependentEntityName),linkentity.setAttribute("from",from),linkentity.setAttribute("to",to),linkentity.setAttribute("alias","dependent");const filter=document.createElement("filter");filter.setAttribute("type","and");const condition=document.createElement("condition");return condition.setAttribute("attribute",`${this.dependentEntityName}id`),condition.setAttribute("operator","eq"),condition.setAttribute("uitype",this.dependentEntityName),condition.setAttribute("value",null!=(_b=null==(_a=this.dependentValue)?void 0:_a.id)?_b:""),filter.appendChild(condition),linkentity.appendChild(filter),linkentity}getManyToManyLinkEntity(manytomanyrelationship,baseentityname){var _a,_b;const intersectentity=manytomanyrelationship.IntersectEntityName,intersectFromTo=manytomanyrelationship.Entity1LogicalName===baseentityname?manytomanyrelationship.Entity1IntersectAttribute:manytomanyrelationship.Entity2IntersectAttribute,dependententity=manytomanyrelationship.Entity1LogicalName===baseentityname?manytomanyrelationship.Entity2LogicalName:manytomanyrelationship.Entity1LogicalName,dependententityFromTo=manytomanyrelationship.Entity1LogicalName===baseentityname?manytomanyrelationship.Entity2IntersectAttribute:manytomanyrelationship.Entity1IntersectAttribute,linkentity1=document.createElement("link-entity");linkentity1.setAttribute("name",intersectentity),linkentity1.setAttribute("from",intersectFromTo),linkentity1.setAttribute("to",intersectFromTo);const linkentity2=document.createElement("link-entity");linkentity2.setAttribute("name",dependententity),linkentity2.setAttribute("from",dependententityFromTo),linkentity2.setAttribute("to",dependententityFromTo),linkentity2.setAttribute("alias","dependent");const filter=document.createElement("filter");filter.setAttribute("type","and");const condition=document.createElement("condition");return condition.setAttribute("attribute",dependententityFromTo),condition.setAttribute("operator","eq"),condition.setAttribute("uitype",dependententity),condition.setAttribute("value",null!=(_b=null==(_a=this.dependentValue)?void 0:_a.id)?_b:""),filter.appendChild(condition),linkentity2.appendChild(filter),linkentity1.appendChild(linkentity2),linkentity1}getLookupView(){return __async(this,null,(function*(){return yield this.context.webAPI.retrieveRecord("savedquery",this.viewid,"?$select=returnedtypecode,fetchxml")}))}getEntityMetadata(entityname){return __async(this,null,(function*(){return this.context.utils.getEntityMetadata(entityname)}))}openRecord(entityname){return __async(this,null,(function*(){var _a,_b;return this.context.navigation.openForm({entityName:entityname,entityId:null!=(_b=null==(_a=this.selectedValue)?void 0:_a.id)?_b:""})}))}}var useId=__webpack_require__("./node_modules/@fluentui/react-utilities/lib/hooks/useId.js"),FluentProvider=__webpack_require__("./node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js"),darkTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/web/darkTheme.js"),lightTheme=__webpack_require__("./node_modules/@fluentui/tokens/lib/themes/web/lightTheme.js"),useQuery=__webpack_require__("./node_modules/@tanstack/react-query/build/modern/useQuery.js");const useLookupView=()=>{const pcfcontext=usePcfContext(),{data,status,error,isFetching}=(0,useQuery.I)({queryKey:["savedquery",pcfcontext.instanceid],queryFn:()=>pcfcontext.getLookupView(),staleTime:1/0});return{fetchxml:null==data?void 0:data.fetchxml,entityname:null==data?void 0:data.returnedtypecode,status,error,isFetching}};var useTagPickerFilter=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/utils/useTagPickerFilter.js"),TagPickerOption=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/components/TagPickerOption/TagPickerOption.js"),mergeClasses_esm=__webpack_require__("./node_modules/@griffel/core/mergeClasses.esm.js"),Image=__webpack_require__("./node_modules/@fluentui/react-image/lib/components/Image/Image.js"),Spinner=__webpack_require__("./node_modules/@fluentui/react-spinner/lib/components/Spinner/Spinner.js"),TagPicker=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/components/TagPicker/TagPicker.js"),TagPickerControl=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/components/TagPickerControl/TagPickerControl.js"),Button=__webpack_require__("./node_modules/@fluentui/react-button/lib/components/Button/Button.js"),TagPickerGroup=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/components/TagPickerGroup/TagPickerGroup.js"),Tag=__webpack_require__("./node_modules/@fluentui/react-tags/lib/components/Tag/Tag.js"),Link=__webpack_require__("./node_modules/@fluentui/react-link/lib/components/Link/Link.js"),TagPickerInput=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/components/TagPickerInput/TagPickerInput.js"),TagPickerList=__webpack_require__("./node_modules/@fluentui/react-tag-picker/lib/components/TagPickerList/TagPickerList.js");const useMetadata=entityname=>{const pcfcontext=usePcfContext(),{data,status,error,isFetching}=(0,useQuery.I)({queryKey:["metadata",entityname,pcfcontext.instanceid],queryFn:()=>pcfcontext.getEntityMetadata(entityname),enabled:null!=entityname&&""!==entityname,staleTime:1/0});return{metadata:data,primaryid:null==data?void 0:data.PrimaryIdAttribute,primaryname:null==data?void 0:data.PrimaryNameAttribute,primaryimage:null==data?void 0:data.PrimaryImageAttribute,manytoonerelationships:null==data?void 0:data.ManyToOneRelationships,onetomanyrelationships:null==data?void 0:data.OneToManyRelationships,status,error,isFetching}},useTagPickerOptions=()=>{const pcfcontext=usePcfContext(),{records,status,error,isFetching}=(()=>{var _a;const pcfcontext=usePcfContext(),{entityname,fetchxml}=useLookupView(),{primaryid,primaryname,primaryimage,metadata}=useMetadata(entityname),{data,status,error,isFetching}=(0,useQuery.I)({queryKey:["lookuprecords",pcfcontext.instanceid,null==(_a=pcfcontext.dependentValue)?void 0:_a.id,pcfcontext.viewid],queryFn:()=>pcfcontext.getLookupRecords(entityname,primaryid,primaryname,primaryimage,fetchxml,metadata),enabled:!!entityname&&!!primaryid&&!!fetchxml,staleTime:1/0});return{records:data,status,error,isFetching}})(),{entityname}=useLookupView(),{primaryid,primaryname,primaryimage}=useMetadata(entityname);return{options:records?[{id:"-1",displaytext:pcfcontext.SelectText()}].concat(null==records?void 0:records.map((e=>{const imagesrc=null==(null==e?void 0:e[primaryimage])||pcfcontext.isMasked?void 0:`data:image/jpeg;base64,${null==e?void 0:e[primaryimage]}`;return{id:e[`${primaryid}`],primaryname:e[`${primaryname}`],displaytext:pcfcontext.isMasked?"********":pcfcontext.getRecordText(e,primaryname),imagesrc}}))):[{id:"-1",displaytext:pcfcontext.SelectText()}],status,error,isFetching}};var chunk_3=__webpack_require__("./node_modules/@fluentui/react-icons/lib/sizedIcons/chunk-3.js"),chunk_1=__webpack_require__("./node_modules/@fluentui/react-icons/lib/icons/chunk-1.js"),makeStyles_esm=__webpack_require__("./node_modules/@griffel/react/makeStyles.esm.js"),tokens=__webpack_require__("./node_modules/@fluentui/tokens/lib/tokens.js");const useStyles=(0,makeStyles_esm.n)({tagPickerControl:{minWidth:"200px",paddingLeft:"3px",height:"32px"},tagPickerControlEmpty:{paddingLeft:"10px"},tagPickerGroup:{padding:"0 0 0 0"},tagPickerGroupVisible:{display:"block"},tagPickerGroupHidden:{display:"none"},tagPickerInput:{padding:"0 0 0 0"},tagPickerOption:{display:"flex",alignItems:"center"},clearButton:{paddingLeft:"0",paddingRight:"0",minWidth:"10px"},elementVisible:{visibility:"visible"},elementHidden:{visibility:"hidden",display:"none"},icon12:{fontSize:"12px"},tagSelected:{backgroundColor:tokens.L.colorNeutralBackground1Selected},tagpicker:{height:"32px"},tag:{border:"none"},tagOverflow:{whiteSpace:"nowrap",overflow:"hidden",textOverflow:"ellipsis"},tagOverflowLink:{maxWidth:"100%",display:"inline-block"}}),components_LookupDropdown=()=>{var _a,_b,_c,_d,_e,_f,_g,_h,_i;const pcfcontext=usePcfContext(),{options,status,isFetching}=useTagPickerOptions(),{entityname}=useLookupView(),[query,setQuery]=(0,react.useState)(""),[selectedOption,setSelectedOption]=(0,react.useState)(null!=(_b=null==(_a=pcfcontext.selectedValue)?void 0:_a.id)?_b:void 0),[isFocused,setIsFocused]=(0,react.useState)(!1),[isInputFocused,setInputFocused]=(0,react.useState)(!1),styles=useStyles();(0,react.useEffect)((()=>{"success"===status&&void 0!==pcfcontext.dependentValue&&options.length>1&&void 0!==pcfcontext.selectedValue&&!options.some((option=>{var _a2;return option.id===(null==(_a2=pcfcontext.selectedValue)?void 0:_a2.id)}))&&pcfcontext.onChange(void 0)}),[options,status,pcfcontext.selectedValue]),(0,react.useEffect)((()=>{var _a2,_b2;"success"===status&&(null==(_a2=pcfcontext.selectedValue)?void 0:_a2.id)!==selectedOption&&setSelectedOption(null==(_b2=pcfcontext.selectedValue)?void 0:_b2.id)}),[status,pcfcontext.selectedValue]),(0,react.useEffect)((()=>{var _a2,_b2;"success"===status&&void 0===selectedOption?pcfcontext.onChange(void 0):"success"===status&&selectedOption!==(null==(_a2=pcfcontext.selectedValue)?void 0:_a2.id)&&pcfcontext.onChange([{id:selectedOption,name:null==(_b2=options.find((option=>option.id===selectedOption)))?void 0:_b2.primaryname,entityType:entityname}])}),[selectedOption]);const placeholder=(0,react.useMemo)((()=>void 0===selectedOption?"---":""),[selectedOption]),selectedOptions=(0,react.useMemo)((()=>selectedOption?[selectedOption]:[]),[selectedOption]),handleBlur=()=>{setQuery(""),setInputFocused(!1)},handleOnChange=e=>{setInputFocused(""!=e.target.value),setQuery(e.target.value)},handleClear=event=>{setSelectedOption(void 0)},onOptionSelect=(e,data)=>{var _a2;if("no-matches"===data.value)return setQuery(""),void setInputFocused(!1);void 0===data.value||"-1"===data.value?setSelectedOption(void 0):void 0!==data.value&&data.value!==(null==(_a2=pcfcontext.selectedValue)?void 0:_a2.id)&&setSelectedOption(data.value),setQuery(""),setInputFocused(!1)},children=(0,useTagPickerFilter.U)({query,options:options.map((option=>option.id)),noOptionsElement:(0,jsx_runtime.jsx)(TagPickerOption.U,{value:"no-matches",children:pcfcontext.context.resources.getString("**no match**")||"**no match**"}),renderOption:optionidToRender=>{var _a2,_b2,_c2,_d2,_e2,_f2,_g2;return(0,jsx_runtime.jsx)(TagPickerOption.U,{className:(0,mergeClasses_esm.z)(styles.tagPickerOption,optionidToRender===selectedOption?styles.tagSelected:""),media:(null==(_a2=options.find((option=>option.id===optionidToRender)))?void 0:_a2.imagesrc)&&(0,jsx_runtime.jsx)(Image._,{className:styles.tagPickerOption,alt:null==(_b2=options.find((option=>option.id===optionidToRender)))?void 0:_b2.displaytext,shape:"square",src:null==(_d2=options.find((option=>option.id===optionidToRender)))?void 0:_d2.imagesrc,height:24},null==(_c2=options.find((option=>option.id===optionidToRender)))?void 0:_c2.id),text:null!=(_f2=null==(_e2=options.find((option=>option.id===optionidToRender)))?void 0:_e2.displaytext)?_f2:"",value:optionidToRender,children:null==(_g2=options.find((option=>option.id===optionidToRender)))?void 0:_g2.displaytext},optionidToRender)},filter:option=>{var _a2,_b2;return null!=(_b2=null==(_a2=options.find((o=>o.id===option)))?void 0:_a2.displaytext.toLowerCase().includes(query.toLowerCase()))&&_b2}});return"pending"===status||isFetching?(0,jsx_runtime.jsx)(Spinner.y,{size:"tiny",appearance:"primary",label:pcfcontext.context.resources.getString("Loading...")||"Loading..."}):"error"===status?(0,jsx_runtime.jsx)("div",{children:pcfcontext.context.resources.getString("Error fetching data...")||"Error fetching data..."}):(0,jsx_runtime.jsx)("div",{className:styles.tagpicker,children:options&&(0,jsx_runtime.jsxs)(TagPicker.P,{onOptionSelect,selectedOptions,appearance:"filled-darker",disabled:pcfcontext.isReadOnly||pcfcontext.isMasked,children:[(0,jsx_runtime.jsxs)(TagPickerControl.m,{className:(0,mergeClasses_esm.z)(styles.tagPickerControl,selectedOption?"":styles.tagPickerControlEmpty),onMouseEnter:()=>{setIsFocused(!0)},onMouseLeave:()=>{setIsFocused(!1)},expandIcon:(0,jsx_runtime.jsx)(chunk_3.geq,{className:isFocused?styles.elementVisible:styles.elementHidden}),secondaryAction:!selectedOption||pcfcontext.isReadOnly||pcfcontext.isMasked?null:(0,jsx_runtime.jsx)(Button.$,{className:(0,mergeClasses_esm.z)(styles.clearButton,isFocused?styles.elementVisible:styles.elementHidden),appearance:"transparent",size:"small",shape:"rounded",onClick:handleClear,icon:(0,jsx_runtime.jsx)(chunk_1.BEt,{})}),children:[selectedOption&&(0,jsx_runtime.jsx)(TagPickerGroup.o,{className:(0,mergeClasses_esm.z)(styles.tagPickerGroup,isInputFocused?styles.tagPickerGroupHidden:styles.tagPickerGroupVisible),children:(0,jsx_runtime.jsx)(Tag.v,{className:styles.tag,shape:"rounded",size:"medium",appearance:"outline",media:(null==(_c=options.find((option=>option.id===selectedOption)))?void 0:_c.imagesrc)&&(0,jsx_runtime.jsx)(Image._,{alt:null==(_d=options.find((option=>option.id===selectedOption)))?void 0:_d.displaytext,shape:"square",src:null==(_f=options.find((option=>option.id===selectedOption)))?void 0:_f.imagesrc,height:24},null==(_e=options.find((option=>option.id===selectedOption)))?void 0:_e.id),value:selectedOption,title:null==(_g=options.find((option=>option.id===selectedOption)))?void 0:_g.displaytext,dismissible:!1,primaryText:{className:styles.tagOverflow},children:pcfcontext.openRecordEnabled?(0,jsx_runtime.jsx)(Link.N,{className:styles.tagOverflowLink,onClick:()=>pcfcontext.openRecord(entityname),children:null==(_h=options.find((option=>option.id===selectedOption)))?void 0:_h.displaytext}):null==(_i=options.find((option=>option.id===selectedOption)))?void 0:_i.displaytext},selectedOption)}),(0,jsx_runtime.jsx)(TagPickerInput.r,{className:styles.tagPickerInput,"aria-label":pcfcontext.SelectText(),placeholder,value:query,onChange:handleOnChange,onBlur:handleBlur,clearable:!0})]}),(0,jsx_runtime.jsx)(TagPickerList.f,{children})]})})},LookupDropdownApp_queryClient=new queryClient.E({queryCache:new queryCache.$,defaultOptions:{queries:{refetchOnMount:!1,refetchOnWindowFocus:!1}}}),components_LookupDropdownApp=props=>{const pcfcontextservice=new PcfContextService(props);return(0,jsx_runtime.jsx)(QueryClientProvider.Ht,{client:LookupDropdownApp_queryClient,children:(0,jsx_runtime.jsx)(PcfContextProvider,{pcfcontext:pcfcontextservice,children:(0,jsx_runtime.jsx)(useId.LX,{value:`lookupdropdown-${props.instanceid}-`,children:(0,jsx_runtime.jsx)(FluentProvider.q,{theme:props.isDarkMode?darkTheme.C:lightTheme.o,children:(0,jsx_runtime.jsx)(components_LookupDropdown,{})})})})})};var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");class LookupDropdown_LookupDropdown{constructor(){this.onChange=newValue=>{this._selectedValue=newValue,this._notifyOutputChanged()}}init(context,notifyOutputChanged,state,container){var _a,_b;this._notifyOutputChanged=notifyOutputChanged,this._root=(0,client.createRoot)(container),this._appprops={context,instanceid:(0,v4.A)(),isDarkMode:null!=(_b=null==(_a=context.fluentDesignLanguage)?void 0:_a.isDarkTheme)&&_b,onChange:this.onChange}}updateView(context){this._appprops.context=context,this._root.render((0,react.createElement)(components_LookupDropdownApp,this._appprops))}getOutputs(){return{lookupfield:this._selectedValue}}destroy(){this._root.unmount()}}var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api");const renderGenerator=()=>{let container,mockGenerator;return function(){const[args,updateArgs]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useArgs)();return container||(container=document.createElement("div"),mockGenerator=new esm.XW(LookupDropdown_LookupDropdown,{customselecttext:esm.nC,customtext:esm.nC,dependentlookupfield:esm.OQ,lookupfield:esm.OQ,showOpenRecordButton:esm.$S,showRecordImage:esm.$S,sortByTextValue:esm.$S},container),mockGenerator.metadata.initMetadata([{LogicalName:"contact",SchemaName:"Contact",PrimaryIdAttribute:"contactid",PrimaryNameAttribute:"fullname",PrimaryImageAttribute:"entityimage",ManyToOneRelationships:[],OneToManyRelationships:[]}]),mockGenerator.context._parameters.lookupfield.security={editable:!0,readable:!0,secured:!1},mockGenerator.context.webAPI.retrieveRecord.callsFake(((entityType,id,options)=>new Promise("savedquery"===entityType?resolve=>setTimeout((()=>resolve({returnedtypecode:"contact",fetchxml:"<fetch>\n                        <entity>\n                        </entity>\n                      </fetch>"})),100):(_resolve,reject)=>{setTimeout((()=>reject(new Error("invalid"))),100)}))),mockGenerator.context.webAPI.retrieveMultipleRecords.callsFake(((entityType,options,maxPageSize)=>new Promise((resolve=>{resolve({entities:[{contactid:"1",fullname:"Betim Beja",country:"Albania",entityimage:""},{contactid:"2",fullname:"David Rivard",country:"Canada",entityimage:"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"}],nextLink:""})})))),mockGenerator.onOutputChanged.callsFake((()=>{var _a,_b;const{dependentlookupfield,lookupfield}=(null==(_b=(_a=mockGenerator.control).getOutputs)?void 0:_b.call(_a))||{};updateArgs({lookupfield:null==lookupfield?void 0:lookupfield[0],dependentlookupfield:null==dependentlookupfield?void 0:dependentlookupfield[0]})})),mockGenerator.context._SetCanvasItems({lookupfield:args.lookupfield,customselecttext:args.customselecttext,customtext:args.customtext}),mockGenerator.ExecuteInit()),mockGenerator&&(mockGenerator.context._parameters.customselecttext._SetValue(args.customselecttext),mockGenerator.context._parameters.customtext._SetValue(args.customtext),mockGenerator.context._parameters.dependentlookupfield._SetValue(args.dependentlookupfield),mockGenerator.context._parameters.lookupfield._SetValue(args.lookupfield),mockGenerator.context._parameters.showOpenRecordButton._SetValue(args.showOpenRecordButton?"true":"false"),mockGenerator.context._parameters.showRecordImage._SetValue(args.showRecordImage?"true":"false"),mockGenerator.ExecuteUpdateView()),container}},LookupDropdown_stories={title:"PCF Component/LookupDropdown",decorators:[Story=>{const container=document.createElement("div");container.style.margin="2em",container.style.padding="1em",container.style.maxWidth="200px",container.style.border="dotted 1px";const storyResult=Story();return"string"==typeof storyResult?container.innerHTML=storyResult:container.appendChild(storyResult),container}],parameters:{layout:"fullscreen"},argTypes:{isDisabled:{name:"Disabled",control:"boolean",table:{category:"Mode",defaultValue:{summary:"false"}}},isVisible:{name:"Visible",control:"boolean",table:{category:"Mode",defaultValue:{summary:"true"}}},customselecttext:{name:"Custom Select Text",control:"text"},customtext:{name:"Custom Text",control:"text"},showOpenRecordButton:{name:"Show Open Record",control:"boolean"},showRecordImage:{name:"Show Record Image",control:"boolean"}},args:{isVisible:!0,isDisabled:!1}},Primary={render:renderGenerator(),args:{customselecttext:"Custom Select",customtext:void 0,showOpenRecordButton:!0,showRecordImage:!0},parameters:{controls:{expanded:!0}}},CustomText={render:renderGenerator(),args:{customselecttext:"Custom Select",customtext:"{fullname} - {country} - MVP",showOpenRecordButton:!0,showRecordImage:!0}},Selected={render:renderGenerator(),args:{lookupfield:{name:"David Rivard",id:"2",entityType:"contact"},customselecttext:"Custom Select",customtext:void 0,showOpenRecordButton:!0,showRecordImage:!0}},LongText={render:renderGenerator(),args:{customselecttext:"Custom Select",customtext:"{fullname} - {country} - MVP | and a very long text to test the control",showOpenRecordButton:!0,showRecordImage:!0}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  render: renderGenerator(),\n  args: {\n    customselecttext: "Custom Select",\n    customtext: undefined,\n    showOpenRecordButton: true,\n    showRecordImage: true\n  },\n  parameters: {\n    controls: {\n      expanded: true\n    }\n  }\n} as StoryObj<StoryArgs>',...Primary.parameters?.docs?.source}}},CustomText.parameters={...CustomText.parameters,docs:{...CustomText.parameters?.docs,source:{originalSource:'{\n  render: renderGenerator(),\n  args: {\n    customselecttext: "Custom Select",\n    customtext: "{fullname} - {country} - MVP",\n    showOpenRecordButton: true,\n    showRecordImage: true\n  }\n} as StoryObj<StoryArgs>',...CustomText.parameters?.docs?.source}}},Selected.parameters={...Selected.parameters,docs:{...Selected.parameters?.docs,source:{originalSource:'{\n  render: renderGenerator(),\n  args: {\n    lookupfield: {\n      name: "David Rivard",\n      id: "2",\n      entityType: "contact"\n    },\n    customselecttext: "Custom Select",\n    customtext: undefined,\n    showOpenRecordButton: true,\n    showRecordImage: true\n  }\n} as StoryObj<StoryArgs>',...Selected.parameters?.docs?.source}}},LongText.parameters={...LongText.parameters,docs:{...LongText.parameters?.docs,source:{originalSource:'{\n  render: renderGenerator(),\n  args: {\n    customselecttext: "Custom Select",\n    customtext: "{fullname} - {country} - MVP | and a very long text to test the control",\n    showOpenRecordButton: true,\n    showRecordImage: true\n  }\n} as StoryObj<StoryArgs>',...LongText.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","CustomText","Selected","LongText"]},"./node_modules/sinon/pkg sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/sinon/pkg sync recursive",module.exports=webpackEmptyContext}}]);
//# sourceMappingURL=LookupDropdown-stories.1b3c3987.iframe.bundle.js.map