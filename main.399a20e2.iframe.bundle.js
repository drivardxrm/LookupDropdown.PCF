/*! For license information please see main.399a20e2.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkpcf_project=self.webpackChunkpcf_project||[]).push([[179],{"./.storybook/preview.js-generated-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:()=>__namedExportsOrder,parameters:()=>parameters});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptor.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-own-property-descriptors.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-properties.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./stories/LookupDropdown.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomText:()=>CustomText,Primary:()=>Primary,Selected:()=>Selected,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LookupDropdown_stories});__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.slice.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js");var react=__webpack_require__("./node_modules/react/index.js"),esm=__webpack_require__("./node_modules/@shko.online/componentframework-mock/lib/esm/index.js"),client=(__webpack_require__("./node_modules/core-js/modules/es.symbol.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-primitive.js"),__webpack_require__("./node_modules/core-js/modules/es.number.constructor.js"),__webpack_require__("./node_modules/core-js/modules/es.object.define-property.js"),__webpack_require__("./node_modules/react-dom/client.js")),index_production=__webpack_require__("./node_modules/@tanstack/react-query/build/umd/index.production.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),PcfContextProvider=function PcfContextProvider(_ref){var pcfcontext=_ref.pcfcontext,children=_ref.children;return(0,jsx_runtime.jsx)(PcfContext.Provider,{value:pcfcontext,children})};PcfContextProvider.displayName="PcfContextProvider";var PcfContext=(0,react.createContext)(void 0),usePcfContext=function usePcfContext(){return(0,react.useContext)(PcfContext)};try{PcfContextProvider.displayName="PcfContextProvider",PcfContextProvider.__docgenInfo={description:"",displayName:"PcfContextProvider",props:{pcfcontext:{defaultValue:null,description:"",name:"pcfcontext",required:!0,type:{name:"PcfContextService"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["LookupDropdown/services/PcfContext.tsx#PcfContextProvider"]={docgenInfo:PcfContextProvider.__docgenInfo,name:"PcfContextProvider",path:"LookupDropdown/services/PcfContext.tsx#PcfContextProvider"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__("./node_modules/core-js/modules/es.string.match.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.array.join.js"),__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/core-js/modules/es.array.for-each.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.for-each.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.math.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.json.to-string-tag.js"),__webpack_require__("./node_modules/core-js/modules/es.object.create.js"),__webpack_require__("./node_modules/core-js/modules/es.object.get-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.object.set-prototype-of.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js");function _regeneratorRuntime(){_regeneratorRuntime=function _regeneratorRuntime(){return exports};var exports={},Op=Object.prototype,hasOwn=Op.hasOwnProperty,defineProperty=Object.defineProperty||function(obj,key,desc){obj[key]=desc.value},$Symbol="function"==typeof Symbol?Symbol:{},iteratorSymbol=$Symbol.iterator||"@@iterator",asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator",toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";function define(obj,key,value){return Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}),obj[key]}try{define({},"")}catch(err){define=function define(obj,key,value){return obj[key]=value}}function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator,generator=Object.create(protoGenerator.prototype),context=new Context(tryLocsList||[]);return defineProperty(generator,"_invoke",{value:makeInvokeMethod(innerFn,self,context)}),generator}function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)}}catch(err){return{type:"throw",arg:err}}}exports.wrap=wrap;var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};define(IteratorPrototype,iteratorSymbol,(function(){return this}));var getProto=Object.getPrototypeOf,NativeIteratorPrototype=getProto&&getProto(getProto(values([])));NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)&&(IteratorPrototype=NativeIteratorPrototype);var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);function defineIteratorMethods(prototype){["next","throw","return"].forEach((function(method){define(prototype,method,(function(arg){return this._invoke(method,arg)}))}))}function AsyncIterator(generator,PromiseImpl){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if("throw"!==record.type){var result=record.arg,value=result.value;return value&&"object"==typeof value&&hasOwn.call(value,"__await")?PromiseImpl.resolve(value.__await).then((function(value){invoke("next",value,resolve,reject)}),(function(err){invoke("throw",err,resolve,reject)})):PromiseImpl.resolve(value).then((function(unwrapped){result.value=unwrapped,resolve(result)}),(function(error){return invoke("throw",error,resolve,reject)}))}reject(record.arg)}var previousPromise;defineProperty(this,"_invoke",{value:function value(method,arg){function callInvokeWithMethodAndArg(){return new PromiseImpl((function(resolve,reject){invoke(method,arg,resolve,reject)}))}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}})}function makeInvokeMethod(innerFn,self,context){var state="suspendedStart";return function(method,arg){if("executing"===state)throw new Error("Generator is already running");if("completed"===state){if("throw"===method)throw arg;return doneResult()}for(context.method=method,context.arg=arg;;){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult}}if("next"===context.method)context.sent=context._sent=context.arg;else if("throw"===context.method){if("suspendedStart"===state)throw state="completed",context.arg;context.dispatchException(context.arg)}else"return"===context.method&&context.abrupt("return",context.arg);state="executing";var record=tryCatch(innerFn,self,context);if("normal"===record.type){if(state=context.done?"completed":"suspendedYield",record.arg===ContinueSentinel)continue;return{value:record.arg,done:context.done}}"throw"===record.type&&(state="completed",context.method="throw",context.arg=record.arg)}}}function maybeInvokeDelegate(delegate,context){var methodName=context.method,method=delegate.iterator[methodName];if(void 0===method)return context.delegate=null,"throw"===methodName&&delegate.iterator.return&&(context.method="return",context.arg=void 0,maybeInvokeDelegate(delegate,context),"throw"===context.method)||"return"!==methodName&&(context.method="throw",context.arg=new TypeError("The iterator does not provide a '"+methodName+"' method")),ContinueSentinel;var record=tryCatch(method,delegate.iterator,context.arg);if("throw"===record.type)return context.method="throw",context.arg=record.arg,context.delegate=null,ContinueSentinel;var info=record.arg;return info?info.done?(context[delegate.resultName]=info.value,context.next=delegate.nextLoc,"return"!==context.method&&(context.method="next",context.arg=void 0),context.delegate=null,ContinueSentinel):info:(context.method="throw",context.arg=new TypeError("iterator result is not an object"),context.delegate=null,ContinueSentinel)}function pushTryEntry(locs){var entry={tryLoc:locs[0]};1 in locs&&(entry.catchLoc=locs[1]),2 in locs&&(entry.finallyLoc=locs[2],entry.afterLoc=locs[3]),this.tryEntries.push(entry)}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal",delete record.arg,entry.completion=record}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}],tryLocsList.forEach(pushTryEntry,this),this.reset(!0)}function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod)return iteratorMethod.call(iterable);if("function"==typeof iterable.next)return iterable;if(!isNaN(iterable.length)){var i=-1,next=function next(){for(;++i<iterable.length;)if(hasOwn.call(iterable,i))return next.value=iterable[i],next.done=!1,next;return next.value=void 0,next.done=!0,next};return next.next=next}}return{next:doneResult}}function doneResult(){return{value:void 0,done:!0}}return GeneratorFunction.prototype=GeneratorFunctionPrototype,defineProperty(Gp,"constructor",{value:GeneratorFunctionPrototype,configurable:!0}),defineProperty(GeneratorFunctionPrototype,"constructor",{value:GeneratorFunction,configurable:!0}),GeneratorFunction.displayName=define(GeneratorFunctionPrototype,toStringTagSymbol,"GeneratorFunction"),exports.isGeneratorFunction=function(genFun){var ctor="function"==typeof genFun&&genFun.constructor;return!!ctor&&(ctor===GeneratorFunction||"GeneratorFunction"===(ctor.displayName||ctor.name))},exports.mark=function(genFun){return Object.setPrototypeOf?Object.setPrototypeOf(genFun,GeneratorFunctionPrototype):(genFun.__proto__=GeneratorFunctionPrototype,define(genFun,toStringTagSymbol,"GeneratorFunction")),genFun.prototype=Object.create(Gp),genFun},exports.awrap=function(arg){return{__await:arg}},defineIteratorMethods(AsyncIterator.prototype),define(AsyncIterator.prototype,asyncIteratorSymbol,(function(){return this})),exports.AsyncIterator=AsyncIterator,exports.async=function(innerFn,outerFn,self,tryLocsList,PromiseImpl){void 0===PromiseImpl&&(PromiseImpl=Promise);var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList),PromiseImpl);return exports.isGeneratorFunction(outerFn)?iter:iter.next().then((function(result){return result.done?result.value:iter.next()}))},defineIteratorMethods(Gp),define(Gp,toStringTagSymbol,"Generator"),define(Gp,iteratorSymbol,(function(){return this})),define(Gp,"toString",(function(){return"[object Generator]"})),exports.keys=function(val){var object=Object(val),keys=[];for(var key in object)keys.push(key);return keys.reverse(),function next(){for(;keys.length;){var key=keys.pop();if(key in object)return next.value=key,next.done=!1,next}return next.done=!0,next}},exports.values=values,Context.prototype={constructor:Context,reset:function reset(skipTempReset){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(resetTryEntry),!skipTempReset)for(var name in this)"t"===name.charAt(0)&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))&&(this[name]=void 0)},stop:function stop(){this.done=!0;var rootRecord=this.tryEntries[0].completion;if("throw"===rootRecord.type)throw rootRecord.arg;return this.rval},dispatchException:function dispatchException(exception){if(this.done)throw exception;var context=this;function handle(loc,caught){return record.type="throw",record.arg=exception,context.next=loc,caught&&(context.method="next",context.arg=void 0),!!caught}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i],record=entry.completion;if("root"===entry.tryLoc)return handle("end");if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc"),hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0);if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}else if(hasCatch){if(this.prev<entry.catchLoc)return handle(entry.catchLoc,!0)}else{if(!hasFinally)throw new Error("try statement without catch or finally");if(this.prev<entry.finallyLoc)return handle(entry.finallyLoc)}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break}}finallyEntry&&("break"===type||"continue"===type)&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc&&(finallyEntry=null);var record=finallyEntry?finallyEntry.completion:{};return record.type=type,record.arg=arg,finallyEntry?(this.method="next",this.next=finallyEntry.finallyLoc,ContinueSentinel):this.complete(record)},complete:function complete(record,afterLoc){if("throw"===record.type)throw record.arg;return"break"===record.type||"continue"===record.type?this.next=record.arg:"return"===record.type?(this.rval=this.arg=record.arg,this.method="return",this.next="end"):"normal"===record.type&&afterLoc&&(this.next=afterLoc),ContinueSentinel},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc)return this.complete(entry.completion,entry.afterLoc),resetTryEntry(entry),ContinueSentinel}},catch:function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if("throw"===record.type){var thrown=record.arg;resetTryEntry(entry)}return thrown}}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(iterable,resultName,nextLoc){return this.delegate={iterator:values(iterable),resultName,nextLoc},"next"===this.method&&(this.arg=void 0),ContinueSentinel}},exports}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function _toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}var PcfContextService=function(){function PcfContextService(props){var _props$context$parame,_props$context$parame2,_props$context$parame3,_props$context$parame4,_props$context$parame5,_dependentAttributeTy,_filterRelationshipNa;(function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,PcfContextService),this.instanceid=void 0,this.context=void 0,this.viewid=void 0,this.isReadOnly=void 0,this.isMasked=void 0,this.showRecordImage=void 0,this.selectedValue=void 0,this.dependentValue=void 0,this.dependentEntityName=void 0,this.filterRelationshipName=void 0,this.onChange=void 0,props)&&(this.instanceid=props.instanceid,this.context=props.context,this.viewid=props.context.parameters.lookupfield.getViewId(),this.isReadOnly=props.context.mode.isControlDisabled||!(null!==(_props$context$parame=props.context.parameters.lookupfield.security)&&void 0!==_props$context$parame&&_props$context$parame.editable),this.isMasked=!(null!==(_props$context$parame2=props.context.parameters.lookupfield.security)&&void 0!==_props$context$parame2&&_props$context$parame2.readable),this.showRecordImage="true"===props.context.parameters.showRecordImage.raw,this.selectedValue=null!==(_props$context$parame3=props.context.parameters.lookupfield.raw[0])&&void 0!==_props$context$parame3?_props$context$parame3:void 0,this.dependentValue=null!==(null===(_props$context$parame4=props.context.parameters.dependentlookupfield)||void 0===_props$context$parame4?void 0:_props$context$parame4.raw)?null===(_props$context$parame5=props.context.parameters.dependentlookupfield)||void 0===_props$context$parame5?void 0:_props$context$parame5.raw[0]:void 0,this.dependentEntityName=null!==(_dependentAttributeTy=props.context.parameters.lookupfield.dependentAttributeType)&&void 0!==_dependentAttributeTy?_dependentAttributeTy:"",this.filterRelationshipName=null!==(_filterRelationshipNa=props.context.parameters.lookupfield.filterRelationshipName)&&void 0!==_filterRelationshipNa?_filterRelationshipNa:"",this.onChange=props.onChange)}var _openRecord,_getEntityMetadata,_getLookupView,_getLookupRecords;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(PcfContextService,[{key:"CustomTextAttributes",value:function CustomTextAttributes(){var _this$context$paramet,_this$context$paramet2;return null!==(_this$context$paramet=null===(_this$context$paramet2=this.context.parameters.customtext.raw)||void 0===_this$context$paramet2?void 0:_this$context$paramet2.match(/[^{\}]+(?=})/g))&&void 0!==_this$context$paramet?_this$context$paramet:[]}},{key:"SelectText",value:function SelectText(){var _this$context$paramet3;return"--"+(null!==(_this$context$paramet3=this.context.parameters.customselecttext.raw)&&void 0!==_this$context$paramet3?_this$context$paramet3:"Select")+"--"}},{key:"replaceAll",value:function replaceAll(string,search,replace){return string.split(search).join(replace)}},{key:"getRecordText",value:function getRecordText(record,primaryname){var _this=this;if(null==this.context.parameters.customtext.raw)return record[""+primaryname];var customtext=this.context.parameters.customtext.raw;return this.CustomTextAttributes().forEach((function(attribute){var _ref,_record,formatedValue=null!==(_ref=null!==(_record=record[attribute+"@OData.Community.Display.V1.FormattedValue"])&&void 0!==_record?_record:record["_"+attribute+"_value@OData.Community.Display.V1.FormattedValue"])&&void 0!==_ref?_ref:record[""+attribute];customtext=_this.replaceAll(customtext,"{"+attribute+"}",null!=formatedValue?formatedValue:"")})),customtext}},{key:"getAttributes",value:function getAttributes(primaryid,primaryname,primaryimage){var attributes=[primaryid,primaryname];return this.CustomTextAttributes().forEach((function(attribute){attributes.includes(attribute)||attributes.push(attribute)})),this.showRecordImage&&attributes.push(primaryimage),attributes}},{key:"getLookupRecords",value:(_getLookupRecords=_asyncToGenerator(_regeneratorRuntime().mark((function _callee(entityname,primaryid,primaryname,primaryimage,fetchxml,metadata){var _this$dependentValue,_result$entities,parser,fetchxmldoc,entityelement,_metadata$ManyToOneRe,_metadata$OneToManyRe,_metadata$ManyToManyR,manytoonerelationship,onetomanyrelationship,manytomanyrelationship,linkentity,fetchxmlstring,result;return _regeneratorRuntime().wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return parser=new DOMParser,fetchxmldoc=parser.parseFromString(fetchxml,"text/xml"),entityelement=fetchxmldoc.getElementsByTagName("entity")[0],fetchxmldoc.querySelectorAll("attribute").forEach((function(el){return el.remove()})),fetchxmldoc.querySelectorAll('link-entity[alias="dependent"]').forEach((function(el){return el.remove()})),this.getAttributes(primaryid,primaryname,primaryimage).forEach((function(attribute){var customattribute=fetchxmldoc.createElement("attribute");customattribute.setAttribute("name",attribute),entityelement.appendChild(customattribute)})),""!==this.filterRelationshipName&&""!==this.dependentEntityName&&void 0!==this.dependentValue&&""!==(null===(_this$dependentValue=this.dependentValue)||void 0===_this$dependentValue?void 0:_this$dependentValue.id)&&(manytoonerelationship=null===(_metadata$ManyToOneRe=metadata.ManyToOneRelationships)||void 0===_metadata$ManyToOneRe?void 0:_metadata$ManyToOneRe.getByName(this.filterRelationshipName),onetomanyrelationship=null===(_metadata$OneToManyRe=metadata.OneToManyRelationships)||void 0===_metadata$OneToManyRe?void 0:_metadata$OneToManyRe.getByName(this.filterRelationshipName),manytomanyrelationship=null===(_metadata$ManyToManyR=metadata.ManyToManyRelationships)||void 0===_metadata$ManyToManyR?void 0:_metadata$ManyToManyR.getByName(this.filterRelationshipName),linkentity=manytoonerelationship?this.getManyToOneLinkEntity(manytoonerelationship):onetomanyrelationship?this.getOneToManyLinkEntity(onetomanyrelationship,entityname):this.getManyToManyLinkEntity(manytomanyrelationship,entityname),entityelement.appendChild(linkentity)),fetchxmlstring=(new XMLSerializer).serializeToString(fetchxmldoc),_context.next=10,this.context.webAPI.retrieveMultipleRecords(entityname,"?fetchXml="+fetchxmlstring);case 10:return result=_context.sent,_context.abrupt("return",null!==(_result$entities=result.entities)&&void 0!==_result$entities?_result$entities:[]);case 12:case"end":return _context.stop()}}),_callee,this)}))),function getLookupRecords(_x,_x2,_x3,_x4,_x5,_x6){return _getLookupRecords.apply(this,arguments)})},{key:"getManyToOneLinkEntity",value:function getManyToOneLinkEntity(manytoonerelationship){var _this$dependentValue$,_this$dependentValue2,from=this.dependentEntityName+"id",to=manytoonerelationship.ReferencingAttribute,linkentity=document.createElement("link-entity");linkentity.setAttribute("name",this.dependentEntityName),linkentity.setAttribute("from",from),linkentity.setAttribute("to",to),linkentity.setAttribute("alias","dependent");var filter=document.createElement("filter");filter.setAttribute("type","and");var condition=document.createElement("condition");return condition.setAttribute("attribute",this.dependentEntityName+"id"),condition.setAttribute("operator","eq"),condition.setAttribute("uitype",this.dependentEntityName),condition.setAttribute("value",null!==(_this$dependentValue$=null===(_this$dependentValue2=this.dependentValue)||void 0===_this$dependentValue2?void 0:_this$dependentValue2.id)&&void 0!==_this$dependentValue$?_this$dependentValue$:""),filter.appendChild(condition),linkentity.appendChild(filter),linkentity}},{key:"getOneToManyLinkEntity",value:function getOneToManyLinkEntity(onetomanyrelationship,baseentityname){var _this$dependentValue$2,_this$dependentValue3,from=onetomanyrelationship.ReferencingAttribute,to=baseentityname+"id",linkentity=document.createElement("link-entity");linkentity.setAttribute("name",this.dependentEntityName),linkentity.setAttribute("from",from),linkentity.setAttribute("to",to),linkentity.setAttribute("alias","dependent");var filter=document.createElement("filter");filter.setAttribute("type","and");var condition=document.createElement("condition");return condition.setAttribute("attribute",this.dependentEntityName+"id"),condition.setAttribute("operator","eq"),condition.setAttribute("uitype",this.dependentEntityName),condition.setAttribute("value",null!==(_this$dependentValue$2=null===(_this$dependentValue3=this.dependentValue)||void 0===_this$dependentValue3?void 0:_this$dependentValue3.id)&&void 0!==_this$dependentValue$2?_this$dependentValue$2:""),filter.appendChild(condition),linkentity.appendChild(filter),linkentity}},{key:"getManyToManyLinkEntity",value:function getManyToManyLinkEntity(manytomanyrelationship,baseentityname){var _this$dependentValue$3,_this$dependentValue4,intersectentity=manytomanyrelationship.IntersectEntityName,intersectFromTo=manytomanyrelationship.Entity1LogicalName===baseentityname?manytomanyrelationship.Entity1IntersectAttribute:manytomanyrelationship.Entity2IntersectAttribute,dependententity=manytomanyrelationship.Entity1LogicalName===baseentityname?manytomanyrelationship.Entity2LogicalName:manytomanyrelationship.Entity1LogicalName,dependententityFromTo=manytomanyrelationship.Entity1LogicalName===baseentityname?manytomanyrelationship.Entity2IntersectAttribute:manytomanyrelationship.Entity1IntersectAttribute,linkentity1=document.createElement("link-entity");linkentity1.setAttribute("name",intersectentity),linkentity1.setAttribute("from",intersectFromTo),linkentity1.setAttribute("to",intersectFromTo);var linkentity2=document.createElement("link-entity");linkentity2.setAttribute("name",dependententity),linkentity2.setAttribute("from",dependententityFromTo),linkentity2.setAttribute("to",dependententityFromTo),linkentity2.setAttribute("alias","dependent");var filter=document.createElement("filter");filter.setAttribute("type","and");var condition=document.createElement("condition");return condition.setAttribute("attribute",dependententityFromTo),condition.setAttribute("operator","eq"),condition.setAttribute("uitype",dependententity),condition.setAttribute("value",null!==(_this$dependentValue$3=null===(_this$dependentValue4=this.dependentValue)||void 0===_this$dependentValue4?void 0:_this$dependentValue4.id)&&void 0!==_this$dependentValue$3?_this$dependentValue$3:""),filter.appendChild(condition),linkentity2.appendChild(filter),linkentity1.appendChild(linkentity2),linkentity1}},{key:"getLookupView",value:(_getLookupView=_asyncToGenerator(_regeneratorRuntime().mark((function _callee2(){return _regeneratorRuntime().wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return _context2.next=2,this.context.webAPI.retrieveRecord("savedquery",this.viewid,"?$select=returnedtypecode,fetchxml");case 2:return _context2.abrupt("return",_context2.sent);case 3:case"end":return _context2.stop()}}),_callee2,this)}))),function getLookupView(){return _getLookupView.apply(this,arguments)})},{key:"getEntityMetadata",value:(_getEntityMetadata=_asyncToGenerator(_regeneratorRuntime().mark((function _callee3(entityname){return _regeneratorRuntime().wrap((function _callee3$(_context3){for(;;)switch(_context3.prev=_context3.next){case 0:return _context3.abrupt("return",this.context.utils.getEntityMetadata(entityname));case 1:case"end":return _context3.stop()}}),_callee3,this)}))),function getEntityMetadata(_x7){return _getEntityMetadata.apply(this,arguments)})},{key:"openRecord",value:(_openRecord=_asyncToGenerator(_regeneratorRuntime().mark((function _callee4(entityname){var _this$selectedValue$i,_this$selectedValue;return _regeneratorRuntime().wrap((function _callee4$(_context4){for(;;)switch(_context4.prev=_context4.next){case 0:return _context4.abrupt("return",this.context.navigation.openForm({entityName:entityname,entityId:null!==(_this$selectedValue$i=null===(_this$selectedValue=this.selectedValue)||void 0===_this$selectedValue?void 0:_this$selectedValue.id)&&void 0!==_this$selectedValue$i?_this$selectedValue$i:""}));case 1:case"end":return _context4.stop()}}),_callee4,this)}))),function openRecord(_x8){return _openRecord.apply(this,arguments)})}]),PcfContextService}(),Stack=(__webpack_require__("./node_modules/core-js/modules/es.array.some.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.date.to-string.js"),__webpack_require__("./node_modules/@fluentui/react/lib/components/Stack/Stack.js")),IconButton=__webpack_require__("./node_modules/@fluentui/react/lib/components/Button/IconButton/IconButton.js"),useLookupView=function useLookupView(){var pcfcontext=usePcfContext(),_useQuery=(0,index_production.useQuery)(["savedquery",pcfcontext.instanceid],(function(){return pcfcontext.getLookupView()}),{staleTime:1/0}),data=_useQuery.data,isLoading=_useQuery.isLoading,isError=_useQuery.isError;return{fetchxml:null==data?void 0:data.fetchxml,entityname:null==data?void 0:data.returnedtypecode,isLoading,isError}},openbuttonicon={iconName:"OpenInNewWindow"},OpenRecordButton=function OpenRecordButton(){var pcfcontext=usePcfContext(),entityname=useLookupView().entityname;return(0,jsx_runtime.jsx)(IconButton.h,{iconProps:openbuttonicon,title:"Open record",ariaLabel:"Open record",disabled:void 0===pcfcontext.selectedValue,onClick:function onClick(){pcfcontext.openRecord(entityname)}})};OpenRecordButton.displayName="OpenRecordButton";const components_OpenRecordButton=OpenRecordButton;var Dropdown=__webpack_require__("./node_modules/@fluentui/react/lib/components/Dropdown/Dropdown.js"),ImageIcon=__webpack_require__("./node_modules/@fluentui/react/lib/components/Icon/ImageIcon.js"),useMetadata=(__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js"),function useMetadata(entityname){var pcfcontext=usePcfContext(),_useQuery=(0,index_production.useQuery)(["metadata",entityname,pcfcontext.instanceid],(function(){return pcfcontext.getEntityMetadata(entityname)}),{enabled:null!=entityname&&""!==entityname,staleTime:1/0}),data=_useQuery.data,isLoading=_useQuery.isLoading,isError=_useQuery.isError;return{metadata:data,primaryid:null==data?void 0:data.PrimaryIdAttribute,primaryname:null==data?void 0:data.PrimaryNameAttribute,primaryimage:null==data?void 0:data.PrimaryImageAttribute,manytoonerelationships:null==data?void 0:data.ManyToOneRelationships,onetomanyrelationships:null==data?void 0:data.OneToManyRelationships,isLoading,isError}}),useRecordsAsOptions=function useRecordsAsOptions(){var pcfcontext=usePcfContext(),_useRecords=function useRecords(){var _pcfcontext$dependent,pcfcontext=usePcfContext(),_useLookupView=useLookupView(),entityname=_useLookupView.entityname,fetchxml=_useLookupView.fetchxml,_useMetadata=useMetadata(entityname),primaryid=_useMetadata.primaryid,primaryname=_useMetadata.primaryname,primaryimage=_useMetadata.primaryimage,metadata=_useMetadata.metadata,_useQuery=(0,index_production.useQuery)(["lookuprecords",pcfcontext.instanceid,null===(_pcfcontext$dependent=pcfcontext.dependentValue)||void 0===_pcfcontext$dependent?void 0:_pcfcontext$dependent.id],(function(){return pcfcontext.getLookupRecords(entityname,primaryid,primaryname,primaryimage,fetchxml,metadata)}),{enabled:!!entityname&&!!primaryid&&!!fetchxml,staleTime:1/0});return{records:_useQuery.data,isLoading:_useQuery.isLoading,isError:_useQuery.isError}}(),records=_useRecords.records,isLoading=_useRecords.isLoading,isError=_useRecords.isError,entityname=useLookupView().entityname,_useMetadata2=useMetadata(entityname),primaryid=_useMetadata2.primaryid,primaryname=_useMetadata2.primaryname,primaryimage=_useMetadata2.primaryimage;return{options:records?[{key:-1,text:pcfcontext.SelectText()}].concat(records.map((function(e){var imagesrc=null==(null==e?void 0:e[primaryimage])?void 0:"data:image/jpeg;base64,"+(null==e?void 0:e[primaryimage]);return{key:e[""+primaryid],text:pcfcontext.getRecordText(e,primaryname),data:{imagesrc,recordname:e[""+primaryname]}}}))):[{key:-1,text:pcfcontext.SelectText()}],isLoading,isError}},dropdownTheme=(0,__webpack_require__("./node_modules/@fluentui/theme/lib/createTheme.js").j)({palette:{themePrimary:"#a9a9a9",themeLighterAlt:"#fcfcfc",themeLighter:"#f1f1f1",themeLight:"#e5e5e5",themeTertiary:"#cbcbcb",themeSecondary:"#b3b3b3",themeDarkAlt:"#979797",themeDark:"#808080",themeDarker:"#5e5e5e",neutralLighterAlt:"#faf9f8",neutralLighter:"#f3f2f1",neutralLight:"#edebe9",neutralQuaternaryAlt:"#e1dfdd",neutralQuaternary:"#d0d0d0",neutralTertiaryAlt:"#c8c6c4",neutralTertiary:"#595959",neutralSecondary:"#373737",neutralPrimaryAlt:"#2f2f2f",neutralPrimary:"#000000",neutralDark:"#151515",black:"#0b0b0b",white:"#ffffff"}}),dropdownStyles=function dropdownStyles(props){return{title:[{color:"black",display:"block",fontWeight:!0===props.isOpen?"400":"600",fontStretch:"normal",borderWidth:"1px",borderStyle:"solid",borderColor:!0===props.isOpen?"black":"transparent",backgroundColor:"transparent",outline:"none",outlineColor:"transparent",outlineOffset:"0",boxSizing:"border-box",height:"33px",width:"100%",selectors:{":hover":{borderColor:"black",borderWidth:"1px",fontWeight:!0===props.disabled?"600":"400",backgroundColor:!0===props.disabled?"#E2E2E2":"transparent",boxShadow:"none"}}}],dropdown:[{outline:"none",border:"1px solid transparent",outlineColor:"transparent",outlineOffset:"0",boxShadow:"none",selectors:{":focus:after":{outline:"none",border:!0===props.disabled?"1px solid transparent":"1px solid #a9a9a9",outlineColor:"transparent",boxShadow:"none"}}}],dropdownItem:[{display:"inline-flex",selectors:{":hover":{color:"black"}}}],dropdownItemSelected:[{display:"inline-flex",selectors:{":hover":{color:"black"}}}],caretDown:[{color:!0===props.isOpen?"#a9a9a9":"transparent"}],caretDownWrapper:[{borderLeft:!0===props.isOpen?"1px solid #a9a9a9":"none",paddingLeft:"7px"}]}},dropdownIconOptionStyle={marginRight:"8px",width:25,height:25},dropdownIcontitleStyle={marginRight:"8px",marginTop:"3px",width:25,height:25},dropdownTextStyle={display:"inline-flex"};const components_LookupDropdown=function LookupDropdown(){var _pcfcontext$selectedV3,dropdownRef=(0,react.useRef)(null),pcfcontext=usePcfContext(),_useRecordsAsOptions=useRecordsAsOptions(),options=_useRecordsAsOptions.options,isLoading=_useRecordsAsOptions.isLoading,isError=_useRecordsAsOptions.isError,entityname=useLookupView().entityname;(0,react.useEffect)((function(){!isLoading&&!isError&&void 0!==pcfcontext.dependentValue&&options.length>1&&void 0!==pcfcontext.selectedValue&&!options.some((function(option){var _pcfcontext$selectedV;return option.key===(null===(_pcfcontext$selectedV=pcfcontext.selectedValue)||void 0===_pcfcontext$selectedV?void 0:_pcfcontext$selectedV.id)}))&&pcfcontext.onChange(void 0)}),[options,isLoading,isError,pcfcontext.selectedValue]);var _pcfcontext$selectedV4,_pcfcontext$selectedV5,placeholder=void 0===pcfcontext.selectedValue||options.some((function(option){var _pcfcontext$selectedV2;return option.key===(null===(_pcfcontext$selectedV2=pcfcontext.selectedValue)||void 0===_pcfcontext$selectedV2?void 0:_pcfcontext$selectedV2.id)}))?"---":"--"+(null===(_pcfcontext$selectedV3=pcfcontext.selectedValue)||void 0===_pcfcontext$selectedV3?void 0:_pcfcontext$selectedV3.name)+"--";return isLoading?(0,jsx_runtime.jsx)("div",{children:"Loading..."}):isError?(0,jsx_runtime.jsx)("div",{children:"Error fetching data..."}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:options&&(0,jsx_runtime.jsxs)(Stack.K,{horizontal:!0,children:[(0,jsx_runtime.jsx)(Stack.K.Item,{grow:9,children:(0,jsx_runtime.jsx)(Dropdown.L,{placeholder,componentRef:dropdownRef,onRenderPlaceholder:function onRenderPlaceholder(props){return(0,jsx_runtime.jsx)("div",{style:dropdownTextStyle,children:(0,jsx_runtime.jsx)("em",{children:null==props?void 0:props.placeholder})})},onRenderTitle:function onRenderTitle(options){var option=options[0];return(0,jsx_runtime.jsxs)("div",{style:dropdownTextStyle,children:[pcfcontext.showRecordImage&&option&&option.data&&option.data.imagesrc&&(0,jsx_runtime.jsx)(ImageIcon.X,{style:dropdownIcontitleStyle,imageProps:{src:option.data.imagesrc,width:25,height:25}}),option&&option.text&&(0,jsx_runtime.jsx)("span",{children:option.text})]})},onRenderOption:function onRenderOption(option){return(0,jsx_runtime.jsxs)("div",{style:dropdownTextStyle,children:[pcfcontext.showRecordImage&&option&&option.data&&(0,jsx_runtime.jsx)(ImageIcon.X,{style:dropdownIconOptionStyle,imageProps:{src:option.data.imagesrc,width:25,height:25}}),option&&option.text&&(0,jsx_runtime.jsx)("span",{children:option.text})]})},onChange:function onDropdownChanged(event,option,index){var lookupvalue;lookupvalue=void 0===option||-1===option.key?void 0:[{id:option.key.toString(),name:option.data.recordname,entityType:entityname}],pcfcontext.onChange(lookupvalue)},selectedKey:null!==(_pcfcontext$selectedV4=null===(_pcfcontext$selectedV5=pcfcontext.selectedValue)||void 0===_pcfcontext$selectedV5?void 0:_pcfcontext$selectedV5.id)&&void 0!==_pcfcontext$selectedV4?_pcfcontext$selectedV4:"",options,styles:dropdownStyles,theme:dropdownTheme,disabled:pcfcontext.isReadOnly})}),"true"===pcfcontext.context.parameters.showOpenRecordButton.raw&&(0,jsx_runtime.jsx)(Stack.K.Item,{grow:!0,children:(0,jsx_runtime.jsx)(components_OpenRecordButton,{})})]})})};var lib=__webpack_require__("./node_modules/@fluentui/style-utilities/lib/index.js"),FontIcon=__webpack_require__("./node_modules/@fluentui/react/lib/components/Icon/FontIcon.js"),TextField=__webpack_require__("./node_modules/@fluentui/react/lib/components/TextField/TextField.js"),MaskedInput=function MaskedInput(){var maskedinputclass=(0,lib.y0)({fontSize:30,height:30,width:50,margin:"1px"});return(0,jsx_runtime.jsxs)(Stack.K,{tokens:{childrenGap:2},horizontal:!0,children:[(0,jsx_runtime.jsx)(FontIcon.xu,{iconName:"Lock",className:maskedinputclass}),(0,jsx_runtime.jsx)(TextField.n,{value:"*********",style:{width:"100%"}})]})};MaskedInput.displayName="MaskedInput";const components_MaskedInput=MaskedInput;var queryClient=new index_production.QueryClient({queryCache:new index_production.QueryCache,defaultOptions:{queries:{refetchOnMount:!1,refetchOnWindowFocus:!1}}}),LookupDropdownApp=function LookupDropdownApp(props){var pcfcontextservice=new PcfContextService(props);return(0,jsx_runtime.jsx)(index_production.QueryClientProvider,{client:queryClient,contextSharing:!1,children:(0,jsx_runtime.jsx)(PcfContextProvider,{pcfcontext:pcfcontextservice,children:pcfcontextservice.isMasked?(0,jsx_runtime.jsx)(components_MaskedInput,{}):(0,jsx_runtime.jsx)(components_LookupDropdown,{})})})};LookupDropdownApp.displayName="LookupDropdownApp";const components_LookupDropdownApp=LookupDropdownApp;try{LookupDropdownApp.displayName="LookupDropdownApp",LookupDropdownApp.__docgenInfo={description:"",displayName:"LookupDropdownApp",props:{context:{defaultValue:null,description:"",name:"context",required:!0,type:{name:"Context<IInputs>"}},instanceid:{defaultValue:null,description:"",name:"instanceid",required:!0,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(selectedOption?: LookupValue[] | undefined) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["LookupDropdown/components/LookupDropdownApp.tsx#LookupDropdownApp"]={docgenInfo:LookupDropdownApp.__docgenInfo,name:"LookupDropdownApp",path:"LookupDropdown/components/LookupDropdownApp.tsx#LookupDropdownApp"})}catch(__react_docgen_typescript_loader_error){}function LookupDropdown_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,(arg=descriptor.key,key=void 0,"symbol"==typeof(key=function LookupDropdown_toPrimitive(input,hint){if("object"!=typeof input||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!=typeof res)return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string"))?key:String(key)),descriptor)}var arg,key}(0,__webpack_require__("./node_modules/@fluentui/font-icons-mdl2/lib/index.js").l)(void 0,{disableWarnings:!0});var LookupDropdown_LookupDropdown=function(){function LookupDropdown(){var _this=this;!function LookupDropdown_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,LookupDropdown),this._notifyOutputChanged=void 0,this._selectedValue=void 0,this._appprops=void 0,this._root=void 0,this.onChange=function(newValue){_this._selectedValue=newValue,_this._notifyOutputChanged()}}return function LookupDropdown_createClass(Constructor,protoProps,staticProps){return protoProps&&LookupDropdown_defineProperties(Constructor.prototype,protoProps),staticProps&&LookupDropdown_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}(LookupDropdown,[{key:"init",value:function init(context,notifyOutputChanged,state,container){this._notifyOutputChanged=notifyOutputChanged,this._root=(0,client.createRoot)(container),this._appprops={context,instanceid:Math.random(),onChange:this.onChange}}},{key:"updateView",value:function updateView(context){this._appprops.context=context,this._root.render((0,react.createElement)(components_LookupDropdownApp,this._appprops))}},{key:"getOutputs",value:function getOutputs(){return{lookupfield:this._selectedValue}}},{key:"destroy",value:function destroy(){this._root.unmount()}}]),LookupDropdown}(),hooks=__webpack_require__("./node_modules/@storybook/addons/dist/esm/hooks.js");function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){var _i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _s,_e,_x,_r,_arr=[],_n=!0,_d=!1;try{if(_x=(_i=_i.call(arr)).next,0===i){if(Object(_i)!==_i)return;_n=!1}else for(;!(_n=(_s=_x.call(_i)).done)&&(_arr.push(_s.value),_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{if(!_n&&null!=_i.return&&(_r=_i.return(),Object(_r)!==_r))return}finally{if(_d)throw _e}}return _arr}}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}const LookupDropdown_stories={title:"PCF Component/LookupDropdown",decorators:[function(Story){return(0,jsx_runtime.jsx)("div",{style:{margin:"3em",maxWidth:"350px"},children:Story()})}],parameters:{layout:"fullscreen"},argTypes:{}};var Template=function Template(_ref){!function _objectDestructuringEmpty(obj){if(null==obj)throw new TypeError("Cannot destructure "+obj)}(_ref);var container=(0,react.useRef)(null),setLoaded=_slicedToArray((0,react.useState)(!1),2)[1],_ref3=_slicedToArray((0,hooks.D8)(),2),args=_ref3[0],updateArgs=_ref3[1],mockGenerator=(0,hooks.Ye)((function(){if(null!==container.current){var innerContainer=document.createElement("div");container.current.innerHTML="",container.current.appendChild(innerContainer);var mockGenerator=new esm.tg(LookupDropdown_LookupDropdown,{customselecttext:esm.g1,customtext:esm.g1,dependentlookupfield:esm.zu,lookupfield:esm.zu,showOpenRecordButton:esm.UT,showRecordImage:esm.UT},innerContainer);return mockGenerator.metadata.initMetadata([{LogicalName:"contact",SchemaName:"Contact",PrimaryIdAttribute:"contactid",PrimaryNameAttribute:"fullname",PrimaryImageAttribute:"entityimage",ManyToOneRelationships:[],OneToManyRelationships:[]}]),mockGenerator.context._parameters.lookupfield.security={editable:!0,readable:!0,secured:!1},mockGenerator.context.webAPI.retrieveRecord.callsFake((function(entityType,id,options){return new Promise("savedquery"===entityType?function(resolve){return resolve({returnedtypecode:"contact",fetchxml:"<fetch>\n                      <entity>\n                      </entity>\n                    </fetch>"})}:function(_resolve,reject){reject(new Error("invalid"))})})),mockGenerator.context.webAPI.retrieveMultipleRecords.callsFake((function(entityType,options,maxPageSize){return new Promise((function(resolve){resolve({entities:[{contactid:"1",fullname:"Betim Beja",country:"Albania",entityimage:"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"},{contactid:"2",fullname:"David Rivard",country:"Canada",entityimage:"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"}],nextLink:""})}))})),mockGenerator.onOutputChanged.callsFake((function(){var _mockGenerator$contro,_mockGenerator$contro2,_ref4=(null===(_mockGenerator$contro=(_mockGenerator$contro2=mockGenerator.control).getOutputs)||void 0===_mockGenerator$contro?void 0:_mockGenerator$contro.call(_mockGenerator$contro2))||{},dependentlookupfield=_ref4.dependentlookupfield,lookupfield=_ref4.lookupfield;console.log(dependentlookupfield),console.log(lookupfield),updateArgs({lookupfield:null==lookupfield?void 0:lookupfield[0],dependentlookupfield:null==dependentlookupfield?void 0:dependentlookupfield[0]})})),mockGenerator.context._SetCanvasItems({lookupfield:args.lookupfield,customselecttext:args.customselecttext,customtext:args.customtext}),mockGenerator.ExecuteInit(),mockGenerator}}),[container.current]);return mockGenerator&&(mockGenerator.context._parameters.customselecttext._SetValue(args.customselecttext),mockGenerator.context._parameters.customtext._SetValue(args.customtext),mockGenerator.context._parameters.dependentlookupfield._SetValue(args.dependentlookupfield),mockGenerator.context._parameters.lookupfield._SetValue(args.lookupfield),mockGenerator.context._parameters.showOpenRecordButton._SetValue(args.showOpenRecordButton?"true":"false"),mockGenerator.context._parameters.showRecordImage._SetValue(args.showRecordImage?"true":"false"),mockGenerator.ExecuteUpdateView()),(0,react.useEffect)((function(){setLoaded(!0)}),[container.current]),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("div",{ref:container})})};Template.displayName="Template";var Primary=Template.bind({});Primary.args={customselecttext:"Custom Select",customtext:void 0,showOpenRecordButton:!0,showRecordImage:!0};var CustomText=Template.bind({});CustomText.args={customselecttext:"Custom Select",customtext:"{fullname} - {country} - MVP",showOpenRecordButton:!0,showRecordImage:!0};var Selected=Template.bind({});Selected.args={lookupfield:{name:"David Rivard",id:"2",entityType:"contact"},customselecttext:"Custom Select",customtext:void 0,showOpenRecordButton:!0,showRecordImage:!0};var __namedExportsOrder=["Primary","CustomText","Selected"]},"./storybook-init-framework-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"./stories/Introduction.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,__page:()=>__page,default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/react/index.js");var _mdx_js_react__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mdx-js/react/dist/esm.js"),_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/esm/index.js"),_excluded=["components"];function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,_excluded);return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("wrapper",_extends({},layoutProps,props,{components,mdxType:"MDXLayout"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.h_,{title:"Introduction",mdxType:"Meta"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("style",null,"\n    .subheading {\n      --mediumdark: '#999999';\n      font-weight: 900;\n      font-size: 13px;\n      color: #999;\n      letter-spacing: 6px;\n      line-height: 24px;\n      text-transform: uppercase;\n      margin-bottom: 12px;\n      margin-top: 40px;\n    }\n\n    .link-list {\n      display: grid;\n      grid-template-columns: 1fr;\n      grid-template-rows: 1fr 1fr;\n      row-gap: 10px;\n    }\n\n    @media (min-width: 620px) {\n      .link-list {\n        row-gap: 20px;\n        column-gap: 20px;\n        grid-template-columns: 1fr 1fr;\n      }\n    }\n\n    @media all and (-ms-high-contrast:none) {\n    .link-list {\n        display: -ms-grid;\n        -ms-grid-columns: 1fr 1fr;\n        -ms-grid-rows: 1fr 1fr;\n      }\n    }\n\n    .link-item {\n      display: block;\n      padding: 20px 30px 20px 15px;\n      border: 1px solid #00000010;\n      border-radius: 5px;\n      transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n      color: #333333;\n      display: flex;\n      align-items: flex-start;\n    }\n\n    .link-item:hover {\n      border-color: #1EA7FD50;\n      transform: translate3d(0, -3px, 0);\n      box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n    }\n\n    .link-item:active {\n      border-color: #1EA7FD;\n      transform: translate3d(0, 0, 0);\n    }\n\n    .link-item strong {\n      font-weight: 700;\n      display: block;\n      margin-bottom: 2px;\n    }\n\n    .link-item img {\n      height: 40px;\n      width: 40px;\n      margin-right: 15px;\n      flex: none;\n    }\n\n    .link-item span {\n      font-size: 14px;\n      line-height: 20px;\n    }\n\n    .tip {\n      display: inline-block;\n      border-radius: 1em;\n      font-size: 11px;\n      line-height: 12px;\n      font-weight: 700;\n      background: #E7FDD8;\n      color: #66BF3C;\n      padding: 4px 12px;\n      margin-right: 10px;\n      vertical-align: top;\n    }\n\n    .tip-wrapper {\n      font-size: 13px;\n      line-height: 20px;\n      margin-top: 40px;\n      margin-bottom: 40px;\n    }\n\n    .tip-wrapper code {\n      font-size: 12px;\n      display: inline-block;\n    }\n  "),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("h1",{id:"lookupdropdown-pcf-storybook"},"LookupDropdown PCF Storybook"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("img",{src:"https://user-images.githubusercontent.com/38399134/147574921-388d1e41-3873-4a03-aa8d-9e64a103621f.png"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("div",{className:"tip-wrapper"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("span",{className:"tip"},"Tip"),"Browse example stories now by navigating to them in the sidebar. View their code in the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"stories")," directory to learn how they work."),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("div",{className:"tip-wrapper"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("span",{className:"tip"},"Acknowlegment")," Stories implemented with the help of the ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("code",null,"ComponentFramework Mock")," library by ",(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("a",{href:"https://shko.online/",target:"_blank"},"Shko Online")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("div",{className:"subheading"},"Links"),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("div",{className:"link-list"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("a",{className:"link-item",href:"https://github.com/drivardxrm/LookupDropdown.PCF",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("img",{src:"https://pngimg.com/uploads/github/github_PNG20.png",alt:"plugin"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("strong",null,"GitHub Repo"),"LookupDropdown.PCF")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("a",{className:"link-item",href:"https://pcf.gallery/lookup-dropdown-pcf/",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("img",{src:"https://pcf.gallery/assets/images/logo.png",alt:"PCF Gallery"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("strong",null,"PCF Gallery"),"LookupDropdown PCF")),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("a",{className:"link-item",href:"https://github.com/Shko-Online/ComponentFramework-Mock",target:"_blank"},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("img",{src:"https://avatars.githubusercontent.com/u/103819795?s=200&v=4",alt:"Shko Online"}),(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("span",null,(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)("strong",null,"Shko Online"),"ComponentFramework Mock"))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Introduction",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(_storybook_addon_docs__WEBPACK_IMPORTED_MODULE_7__.aT,{mdxStoryNameToKey,mdxComponentAnnotations:componentMeta},(0,_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__.kt)(MDXContent,null))}});const __WEBPACK_DEFAULT_EXPORT__=componentMeta;var __namedExportsOrder=["__page"]},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./LookupDropdown.stories.tsx":"./stories/LookupDropdown.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./Introduction.stories.mdx":"./stories/Introduction.stories.mdx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"},"?4f7e":()=>{},"./generated-stories-entry.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./stories sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[725],(()=>(__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs"))));__webpack_require__.O()}]);